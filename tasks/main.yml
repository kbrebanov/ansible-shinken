---
# tasks file for shinken

- name: Include distribution specific variables
  include_vars: "{{ ansible_distribution }}.yml"
  tags: shinken

- include: CentOS.yml
  when: ansible_distribution == "CentOS"
  tags: shinken

- include: Ubuntu.yml
  when: ansible_distribution == "Ubuntu"
  tags: shinken

- include: FreeBSD.yml
  when: ansible_distribution == "FreeBSD"
  tags: shinken

- name: Create Shinken user
  user: >
    name=shinken
    createhome=yes
    state=present
  tags: shinken

- name: Install Shinken
  pip: >
    name=shinken
    version={{ shinken_version }}
    state=present
  tags: shinken

- name: Install Shinken WebUI2 dependencies
  pip: >
    name={{ item.key }}
    version={{ item.value.version }}
    state=present
  with_dict: shinken_module_webui2_dependencies
  when: "'webui2' in shinken_modules"
  tags: shinken

- name: Initialize Shinken
  become: yes
  become_user: shinken
  become_method: sudo
  command: shinken --init
  args:
    creates: /home/shinken/.shinken.ini
  tags: shinken

- name: Install Shinken modules
  become: yes
  become_user: shinken
  become_method: sudo
  command: shinken install {{ item }}
  args:
    creates: /var/lib/shinken/modules/{{ item }}
  with_items: shinken_modules
  tags: shinken

- name: Create Shiken main configuration file
  template: >
    src=shinken.cfg.j2
    dest=/etc/shinken/shinken.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: restart shinken
  tags: shinken

- name: Create Shinken broker configurations
  template: >
    src=broker.cfg.j2
    dest=/etc/shinken/brokers/{{ item.broker_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: restart shinken
  with_items: shinken_brokers
  tags: shinken

- name: Create Shinken arbiter configurations
  template: >
    src=arbiter.cfg.j2
    dest=/etc/shinken/arbiters/{{ item.arbiter_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: restart shinken
  with_items: shinken_arbiters
  tags: shinken

- name: Create Shinken scheduler configurations
  template: >
    src=scheduler.cfg.j2
    dest=/etc/shinken/schedulers/{{ item.scheduler_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: restart shinken
  with_items: shinken_schedulers
  tags: shinken

- name: Create Shinken poller configurations
  template: >
    src=poller.cfg.j2
    dest=/etc/shinken/pollers/{{ item.poller_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: restart shinken
  with_items: shinken_pollers
  tags: shinken

- name: Create Shinken reactionner configurations
  template: >
    src=reactionner.cfg.j2
    dest=/etc/shinken/reactionners/{{ item.reactionner_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: restart shinken
  with_items: shinken_reactionners
  tags: shinken

- name: Create template configurations
  template: >
    src=templates/{{ item }}.cfg.j2
    dest=/etc/shinken/templates/{{ item }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items:
    - generic-contact
    - generic-host
    - generic-service
    - srv-pnp
    - time_templates
  tags: shinken

- name: Create realm configurations
  template: >
    src=realm.cfg.j2
    dest=/etc/shinken/realms/{{ item.realm_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_realms
  tags: shinken

- name: Create timeperiod configurations
  template: >
    src=timeperiod.cfg.j2
    dest=/etc/shinken/timeperiods/{{ item.timeperiod_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_timeperiods
  tags: shinken

- name: Create hostgroup configurations
  template: >
    src=hostgroup.cfg.j2
    dest=/etc/shinken/hostgroups/{{ item.hostgroup_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_hostgroups
  tags: shinken

- name: Create host configurations
  template: >
    src=host.cfg.j2
    dest=/etc/shinken/hosts/{{ item.host_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_hosts
  tags: shinken

- name: Create servicegroup configurations
  template: >
    src=servicegroup.cfg.j2
    dest=/etc/shinken/servicegroups/{{ item.servicegroup_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_servicegroups
  tags: shinken

- name: Create service configurations
  template: >
    src=service.cfg.j2
    dest=/etc/shinken/services/{{ item.service_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_services
  tags: shinken

- name: Create contactgroup configurations
  template: >
    src=contactgroup.cfg.j2
    dest=/etc/shinken/contactgroups/{{ item.contactgroup_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_contactgroups
  tags: shinken

- name: Create contact configurations
  template: >
    src=contact.cfg.j2
    dest=/etc/shinken/contacts/{{ item.contact_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_contacts
  tags: shinken

- name: Create command configurations
  template: >
    src=command.cfg.j2
    dest=/etc/shinken/commands/{{ item.command_name }}.cfg
    owner=shinken
    group=shinken
    mode=0644
  notify: reload shinken
  with_items: shinken_commands
  tags: shinken

- name: Create Shinken WebUI2 module configuration file
  template: >
    src=modules/webui2.cfg.j2
    dest=/etc/shinken/modules/webui2.cfg
    owner=shinken
    group=shinken
    mode=0640
  when: "'webui2' in shinken_modules"
  notify: restart shinken
  tags: shinken

- name: Ensure Shinken service is started and enabled on boot
  service: name={{ shinken_service_name }} state=started enabled=yes
  tags: shinken
